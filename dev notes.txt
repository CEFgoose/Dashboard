
DATABASE setup:

You will need to set up a local database instance  named "tabula-rasa" and with your root postgres user, create a new user for that database named "tabula-rasa" as well


You will then need to exit psql, cd into the back end folder, and run "flask db migrate" and the n "flask db upgrade" which will configure the new local database according to the slqalchemy setup in viewer







--------OPEN CHROME IN UNPROTECTED CORS MODE FOR LOCAL DEV-------

open -n -a /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --args --user-data-dir="/tmp/chrome_dev_test" --disable-web-security

--------YARN START WITHOUT HEADER CHECK (dev.) FOR LOCAL DEV-----

DANGEROUSLY_DISABLE_HOST_CHECK=true yarn start

---------------------DEV TO PROD CHANGES--------------------------

CHANGE API_URL & SSO_URL TO PROD IN:
front-end/viewer/src/components/constants.js
Line 99

COMMENT ALL CORS HEADERS IN API CALLS
calls.js lines 13 & 30
login/index.js lines 54 & 98

COMMENT ACCESS_CONTROL_ALLOW_ORIGIN
login/index.js line 101

Change API_BASE_URL and SSO_BASE_URL in static_variables.py:
line 31
DEV:
API_BASE_URL = "dev.localhost:3000/api"
SSO_BASE_URL="http://dev.localhost:5001/api/"
PROD:
API_BASE_URL = "https://viewer.kaart.com/api"
SSO_BASE_URL = "https://my.kaart.com/api/"

CHANGE APP_BASE URL and SSO_URL in tabula-rasa.env line 4



------------------FORMATTER COMMANDS--------------------------------------

formatter commands:
black -l 79 . --exclude venv
flake8 . --exclude venv
prettier  --write .


// ---------------------RENEW CERTIFICATE-------------------------------

ssh viewer.kaart.com
cd kubernetes
microk8s.kubectl delete -f ingress.yaml -n tabula-rasa
microk8s.kubectl apply -f ingress_update_cert.yaml -n tabula-rasa
microk8s.kubectl apply -f ingress.yaml -n tabula-rasa